# Generated by Django 5.1.1 on 2024-09-30 13:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления записи', verbose_name='Дата обновления')),
                ('status', models.BooleanField(default=True, help_text='Укажите, доступен ли автомобиль для аренды в данный момент.', verbose_name='Статус автомобиля')),
                ('brand', models.CharField(help_text='Введите марку автомобиля, например, MERCEDES-BENZ.', max_length=100, verbose_name='Марка автомобиля')),
                ('model', models.CharField(help_text='Введите модель автомобиля, например, S223.', max_length=100, verbose_name='Модель автомобиля')),
                ('city', models.CharField(choices=[('astana', 'Астана'), ('almaty', 'Алматы')], help_text='Выберите город, в котором доступна аренда автомобиля, например, Алматы.', max_length=100, verbose_name='Город аренды')),
                ('color', models.CharField(help_text='Укажите цвет автомобиля, например, Серый.', max_length=50, verbose_name='Цвет автомобиля')),
                ('year', models.IntegerField(help_text='Введите год выпуска автомобиля, например, 2021.', verbose_name='Год выпуска автомобиля')),
                ('drive_type', models.CharField(blank=True, help_text='Укажите тип привода автомобиля, например, Задний. Это поле необязательно для заполнения.', max_length=50, null=True, verbose_name='Тип привода автомобиля')),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Бензин'), ('diesel', 'Дизель'), ('electric', 'Электричество'), ('hybrid', 'Гибрид'), ('hydrogen', 'Водород'), ('lpg', 'Газ (LPG)'), ('cng', 'Сжатый природный газ (CNG)')], default='gasoline', help_text='Выберите тип топлива, используемого автомобилем, например, Бензин.', max_length=50, verbose_name='Тип топлива автомобиля')),
                ('volume', models.DecimalField(decimal_places=2, help_text='Укажите объем двигателя автомобиля в литрах, например, 2.0.', max_digits=5, verbose_name='Объем двигателя автомобиля')),
                ('license_plate', models.CharField(help_text='Введите государственный номер автомобиля, например, KZ 123 ABC.', max_length=15, verbose_name='Государственный номер')),
                ('volume_description', models.CharField(blank=True, help_text="Можете указать дополнительные сведения о двигателе, например, 'Турбированный'. Это поле необязательно для заполнения.", max_length=50, null=True, verbose_name='Дополнительная информация об объеме двигателя')),
                ('price_6_hours', models.DecimalField(decimal_places=2, help_text='Стоимость аренды автомобиля на 6 часов, например, 168000 тенге.', max_digits=10, verbose_name='Стоимость аренды на 6 часов')),
                ('price_12_hours', models.DecimalField(decimal_places=2, help_text='Стоимость аренды автомобиля на 12 часов, например, 294000 тенге.', max_digits=10, verbose_name='Стоимость аренды на 12 часов')),
                ('price_24_hours', models.DecimalField(decimal_places=2, help_text='Стоимость аренды автомобиля на 24 часа, например, 420000 тенге.', max_digits=10, verbose_name='Стоимость аренды на 24 часа')),
                ('description', models.TextField(help_text='Введите краткое описание автомобиля, например, Автомобиль отличается высокой скоростью и надежностью.', verbose_name='Общее описание автомобиля')),
                ('interior_description', models.TextField(blank=True, help_text='Опишите салон автомобиля, например, Интерьер автомобиля очень комфортен и уютен. Это поле необязательно для заполнения.', null=True, verbose_name='Описание салона автомобиля')),
                ('why_this_car', models.TextField(blank=True, help_text='Объясните, почему этот автомобиль достоин внимания, например, Этот автомобиль очень удобен и комфортен. Это поле необязательно для заполнения.', null=True, verbose_name='Почему этот автомобиль?')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
            },
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления записи', verbose_name='Дата обновления')),
                ('image', models.ImageField(help_text='Загрузите изображение автомобиля в формате JPG или PNG. Рекомендуется использовать фотографии высокого качества, чтобы детализировано показать внешний вид автомобиля.', upload_to='car_images/', verbose_name='Изображение автомобиля')),
                ('car', models.ForeignKey(help_text='Выберите автомобиль, к которому будет привязано данное изображение. Это позволит отслеживать все фотографии, загруженные для данного транспортного средства.', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='contents.car', verbose_name='Автомобиль')),
            ],
            options={
                'verbose_name': 'Изображение автомобиля',
                'verbose_name_plural': 'Изображения автомобилей',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления записи', verbose_name='Дата обновления')),
                ('full_name', models.CharField(help_text='Введите полное имя клиента, например, Иван Иванов', max_length=100, verbose_name='Полное имя')),
                ('phone_number', models.CharField(help_text='Введите номер телефона клиента в международном формате, например, +7 777 123 4567', max_length=20, verbose_name='Номер телефона')),
                ('date_start', models.DateField(help_text='Укажите дату, с которой начинается аренда автомобиля', verbose_name='Дата начала аренды')),
                ('date_end', models.DateField(help_text='Укажите дату, когда аренда автомобиля заканчивается', verbose_name='Дата окончания аренды')),
                ('city', models.CharField(choices=[('astana', 'Астана'), ('almaty', 'Алматы')], default='almaty', help_text='Выберите город, где будет происходить аренда автомобиля', max_length=10, verbose_name='Город аренды')),
                ('is_read', models.BooleanField(default=False, help_text='Укажите, прочитано ли это сообщение', verbose_name='Прочитано')),
                ('auto', models.ForeignKey(help_text='Введите марку и модель автомобиля, который будет забронирован', on_delete=django.db.models.deletion.CASCADE, to='contents.car', verbose_name='Автомобиль')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-created_at'],
            },
        ),
    ]
